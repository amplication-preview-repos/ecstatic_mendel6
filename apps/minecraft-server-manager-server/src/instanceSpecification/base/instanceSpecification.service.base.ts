/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  InstanceSpecification as PrismaInstanceSpecification,
  MinecraftServer as PrismaMinecraftServer,
} from "@prisma/client";

export class InstanceSpecificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InstanceSpecificationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.instanceSpecification.count(args);
  }

  async instanceSpecifications<
    T extends Prisma.InstanceSpecificationFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstanceSpecificationFindManyArgs>
  ): Promise<PrismaInstanceSpecification[]> {
    return this.prisma.instanceSpecification.findMany<Prisma.InstanceSpecificationFindManyArgs>(
      args
    );
  }
  async instanceSpecification<
    T extends Prisma.InstanceSpecificationFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstanceSpecificationFindUniqueArgs>
  ): Promise<PrismaInstanceSpecification | null> {
    return this.prisma.instanceSpecification.findUnique(args);
  }
  async createInstanceSpecification<
    T extends Prisma.InstanceSpecificationCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstanceSpecificationCreateArgs>
  ): Promise<PrismaInstanceSpecification> {
    return this.prisma.instanceSpecification.create<T>(args);
  }
  async updateInstanceSpecification<
    T extends Prisma.InstanceSpecificationUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstanceSpecificationUpdateArgs>
  ): Promise<PrismaInstanceSpecification> {
    return this.prisma.instanceSpecification.update<T>(args);
  }
  async deleteInstanceSpecification<
    T extends Prisma.InstanceSpecificationDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstanceSpecificationDeleteArgs>
  ): Promise<PrismaInstanceSpecification> {
    return this.prisma.instanceSpecification.delete(args);
  }

  async findMinecraftServers(
    parentId: string,
    args: Prisma.MinecraftServerFindManyArgs
  ): Promise<PrismaMinecraftServer[]> {
    return this.prisma.instanceSpecification
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .minecraftServers(args);
  }
}
